name: PR Checks

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Use Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint

  unit-test-1:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Use Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Create .env from GitHub Secrets
        run: |
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
          echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}" >> .env
          echo "OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}" >> .env
      - name: Run unit tests with coverage
        run: npx vitest run --coverage
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage-1
          path: coverage

  unit-test-2:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Use Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Create .env from GitHub Secrets
        run: |
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
          echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}" >> .env
          echo "OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}" >> .env
      - name: Run unit tests with coverage
        run: npx vitest run --coverage
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage-2
          path: coverage

  status-comment:
    runs-on: ubuntu-latest
    needs: [lint, unit-test-1, unit-test-2]
    if: ${{ success() }}
    steps:
      - name: Comment PR with status
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ✅ Wszystkie testy, lint i coverage przeszły pomyślnie!
